-- sql/rag-schema.sql
-- Supabase / PostgreSQL schema for Retrieval-Augmented Generation (RAG)
-- Enables pgvector and defines transcript storage with embedding search.

-- ------------------------------------------------------------------
-- 1. Extension
-- ------------------------------------------------------------------
create extension if not exists vector;

-- ------------------------------------------------------------------
-- 2. Parent table: transcripts
-- ------------------------------------------------------------------
create table if not exists public.transcripts (
  id          bigint generated by default as identity primary key,
  title       text,
  source_url  text,
  created_at  timestamptz default now()
);

-- ------------------------------------------------------------------
-- 3. Chunks table with pgvector embedding
-- ------------------------------------------------------------------
create table if not exists public.transcript_chunks (
  id            bigint generated by default as identity primary key,
  transcript_id bigint references public.transcripts(id) on delete cascade,
  content       text not null,
  token_count   int default 0,
  -- 1536-dimension vector for OpenAI text-embedding-3-small
  embedding     vector(1536),
  source_url    text,
  created_at    timestamptz default now()
);

-- ------------------------------------------------------------------
-- 4. Indexes
-- ------------------------------------------------------------------
create index if not exists idx_transcript_chunks_transcript_id
  on public.transcript_chunks(transcript_id);

create index if not exists idx_transcript_chunks_created_at
  on public.transcript_chunks(created_at desc);

create index if not exists idx_transcript_chunks_embedding
  on public.transcript_chunks
  using ivfflat (embedding vector_cosine_ops)
  with (lists = 100);
